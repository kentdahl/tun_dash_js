(()=>{"use strict";class e extends Phaser.Scene{constructor(){super("lobby")}preload(){this.load.image("red_end","./images/maze/red_end.png")}create(){var e={font:"48px Arial",fill:"#ff00ff"};this.add.text(10,10,"Magic Maze",e),this.add.text(20,64,"Tunnel Dash",e);var t=this.add.image(0,128,"red_end").setOrigin(0),s=this.add.text(32,360,"!!! GO !!!",{font:"64px Garamond",fill:"#ff44dd",backgroundColor:"#4444dd"}).setOrigin(0);this.cameras.main.fadeIn(1e3,0,0,0),this.input.keyboard.once("keydown-SPACE",(()=>this.clickedStartBtn())),s.setInteractive().on("pointerup",(()=>this.clickedStartBtn())),t.setInteractive().on("pointerup",(()=>this.clickedStartBtn()))}clickedStartBtn(){this.cameras.main.fadeOut(1e3,0,0,0),this.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE,((e,t)=>{this.scene.start("tunnel",{level:1})}))}}let t=null;class s extends Phaser.Events.EventEmitter{constructor(){super()}static getCurrent(){return null==t&&(t=new s),t}}class i extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"lightning")}fire(e,t){this.body.reset(e,t),this.setActive(!0),this.setVisible(!0),this.setVelocityY(-480),this.body.allowRotation=!0,this.body.setAngularVelocity(25),this.body.setMass(.5),this.startY=t,this.endY=t-2400,this.anims.play("spell-lightning")}preUpdate(e,t){super.preUpdate(e,t),this.y<=this.endY&&this.recycleMissile(),this.body.velocity.y>-100&&this.recycleMissile()}handleHitMonster(e){e.hitByMissile(this),this.recycleMissile()}recycleMissile(){this.setActive(!1),this.setVisible(!1)}}class a extends Phaser.Physics.Arcade.Group{constructor(e){super(e.physics.world,e),this.createMultiple({frameQuantity:25,key:"lightning",active:!1,visible:!1,classType:i}),e.anims.create({key:"spell-lightning",frames:e.anims.generateFrameNumbers("spritesheet",{start:10,end:12}),frameRate:10,repeat:-1})}fireMissile(e,t){let s=this.getFirstDead(!1);s&&s.fire(e,t)}}class n{constructor(e=100,t=null){this.resetPool(e,t)}resetPool(e=100,t=null){this.maxVal=e,this.val=t||e}getCurrent(){return this.val}getValue(){return this.val}getRatio(){return this.val/this.maxVal}drain(e){return this.val>=e&&(this.val-=e,!0)}fill(e){return this.val+=e,this.val>this.maxVal&&(this.val=this.maxVal),this.val}isEmpty(){return this.val<=0}}class l extends n{constructor(e=100){super(e)}}class r extends n{constructor(e=100){super(e)}}class h extends Phaser.Physics.Arcade.Sprite{constructor(e){super(e.scene,e.x,e.y,"player-forward",0),e.scene.add.existing(this),e.scene.physics.add.existing(this),this.currentScene=e.scene,this.player_initialize(),e.scene.anims.create({key:"player-left",frames:e.scene.anims.generateFrameNumbers("spritesheet",{start:3,end:3}),frameRate:10,repeat:-1}),e.scene.anims.create({key:"player-forward",frames:[{key:"spritesheet",frame:0}],frameRate:4,repeat:-1}),e.scene.anims.create({key:"player-forward-dashing",frames:e.scene.anims.generateFrameNumbers("spritesheet",{start:0,end:3}),frameRate:4,repeat:-1}),e.scene.anims.create({key:"player-right",frames:e.scene.anims.generateFrameNumbers("spritesheet",{start:1,end:1}),frameRate:10,repeat:-1}),e.scene.anims.create({key:"player-downward",frames:e.scene.anims.generateFrameNumbers("spritesheet",{start:2,end:2}),frameRate:10,repeat:-1}),this.anims.play("player-forward-dashing",!0),this.eventually=s.getCurrent(),this.eventually.on("TUN_HUD_LEFT",(()=>this.handleLeftButton())),this.eventually.on("TUN_HUD_RIGHT",(()=>this.handleRightButton())),this.eventually.on("TUN_HUD_FORWARD",(()=>this.handleForwardButton())),this.eventually.on("TUN_HUD_BACKWARD",(()=>this.handleBackwardButton())),this.eventually.on("TUN_HUD_MAIN_TAP",(()=>this.handleFireButton()));let t=e.scene.input.keyboard;t.on("keydown-A",(()=>this.handleLeftButton())),t.on("keydown-D",(()=>this.handleRightButton())),t.on("keydown-W",(()=>this.handleForwardButton())),t.on("keydown-S",(()=>this.handleBackwardButton())),t.on("keydown-SPACE",(()=>this.handleFireButton())),t.on("keydown-RETURN",(()=>this.handleSpellButton())),this.body.onCollide=!0,this.currentScene.physics.world.on("collide",((e,t,s)=>this.handleCollideEvent(e,t,s)))}player_initialize(){this.health_pool=new r(200),this.mana_pool=new l(350),this.setBounce(0,.3),this.body.worldBounce=new Phaser.Math.Vector2(.9,.9),this.body.onWorldBounds=!0,this.body.setDrag(25,5),this.body.setFriction(25,5),this.body.setMaxVelocity(500,500),this.startingPos=this.body.position.clone(),this.lastPortalPos=this.startingPos.clone(),this.magic_missiles=new a(this.currentScene)}player_uninitialize(){Phaser.Utils.Array.Each(["TUN_HUD_LEFT","TUN_HUD_RIGHT","TUN_HUD_FORWARD","TUN_HUD_BACKWARD","TUN_HUD_MAIN_TAP"],(e=>this.eventually.removeListener(e,null,this)))}player_get_ready(){}handle_movement(){let e=this.scene.cursors;e.left.isDown?this.handleLeftButton():e.right.isDown&&this.handleRightButton(),e.up.isDown&&this.handleForwardButton(),e.down.isDown&&this.handleBackwardButton()}handle_floor(){var e=this.scene.floor.getTileAtWorldXY(this.body.position.x,this.body.position.y,!0);e&&e.index&&(64==e.index&&this.handleHitPortalTile(e),40==e.index&&this.handleHitExitTile(e))}handleLeftButton(){this.setVelocityX(-160),this.anims.play("player-left",!0)}handleRightButton(){this.setVelocityX(160),this.anims.play("player-right",!0)}handleForwardButton(){this.setVelocityY(-320),this.setVelocityX(.8*this.body.velocity.x),this.anims.play("player-forward-dashing",!0)}handleBackwardButton(){this.setVelocityY(160),this.anims.play("player-downward",!0)}handleFireButton(){this.handleForwardButton(),this.mana_pool.drain(2)&&(this.magic_missiles.fireMissile(this.body.position.x+16,this.body.position.y+16),this.eventually.emit("TUN_PLAYER_STATUS_UPDATE",this))}handleSpellButton(){}handleCollideEvent(e,t,s){this.handleBackwardButton()}handleHitPortalTile(e){var t=this.body.position.clone(),s=this.lastPortalPos;t.fuzzyEquals(s,64)||(this.lastPortalPos=t,this.body.position.x=s.x,this.body.position.y=s.y)}handleHitExitTile(e){this.body.setAngularVelocity(2500),this.body.onCollide=!1,this.body.setMass(5.1),this.body.setVelocity(0,800),this.setAlpha(.4),this.setScale(.8),this.anims.play("player-downward",!0),this.scene.time.delayedCall(1e3,this.finallyExit,[],this),this.scene.tweens.add({targets:this,duration:1500,scaleX:5,scaleY:5,yoyo:!0})}finallyExit(){this.scene.handlePlayerTunnelExit()}disabled_preUpdate(e,t){this.body.velocity}}class o extends Phaser.Physics.Arcade.Sprite{constructor(e){super(e),e.add.existing(this),e.physics.add.existing(this),this.gid=null}monster_initialize(e=null,t=null){this.health_pool=new r(50),e&&this.setName(e),t&&(this.mygid=t.gid),this.scene.anims.create({key:"monster-forward-dashing",frames:this.scene.anims.generateFrameNumbers("spritesheet",{start:40,end:57}),frameRate:1,repeat:-1}),this.anims.play("monster-forward-dashing",!0);var s=this.name,i=this.mygid;this.anim_key="monster-"+s,s&&i&&(this.scene.anims.create({key:this.anim_key,frames:this.scene.anims.generateFrameNumbers("spritesheet",{start:i,end:i}),frameRate:4,repeat:-1}),this.anims.play(this.anim_key,!0)),this.health=25,this.mana=10,this.setBounce(.05,.08),this.body.onWorldBounds=!0,this.body.setDamping(!0),this.body.setDrag(500,250),this.body.setFriction(25,5),this.body.setMaxVelocity(160,360),this.body.setMass(5)}hitByMissile(e){this.health_pool.drain(5)?this.scene.tweens.add({targets:this,duration:200,scaleX:1.2,scaleY:.8,yoyo:!0}):this.startToDie()}startToDie(){this.body.setAngularVelocity(-500),this.body.collide=!1,this.body.setMass(.1),this.body.setVelocity(this.body.position.x-500,-800),this.setAlpha(.4),this.setScale(.8),this.scene.time.delayedCall(1500,this.finallyDie,[],this),this.scene.tweens.add({targets:this,duration:1500,scaleX:1.4,scaleY:1.4,yoyo:!0})}finallyDie(){this.setActive(!1),this.setVisible(!1)}disabled_preUpdate(e,t){}}class d extends o{constructor(e){super(e)}monster_initialize(e=null,t=null){super.monster_initialize(e,t),this.health_pool.resetPool(20)}}class c extends Phaser.Scene{constructor(){super("tunnel")}init(e){const{level:t=0}=e;console.log(`Tunnel - init(${t})`),this.givenLevel=t,this.currentLevel=t}preload(){console.log("Tunnel - preload()");var e=this.currentLevel;console.log(` -> givenLevel: ${e}`),this.tunnelTilemapName="tiled-"+this.getTunnelSceneNameForLevel(e);var t=this.getTunnelFilenameForLevel(e);console.log(` -> tunnelFilname: ${t}`);var s=this.getDataBaseDir();this.load.tilemapTiledJSON(this.tunnelTilemapName,t),this.load.image("sprites",s+"/images/sprites.png"),this.load.spritesheet("spritesheet",s+"/images/sprites.png",{frameWidth:32,frameHeight:32})}create(){console.log("Tunnel - create()"),this.add.image(0,0,"sprites").setOrigin(0,0);const e=this.make.tilemap({key:this.tunnelTilemapName}),t=e.addTilesetImage("sprites","sprites");this.tilemap=e,this.floor=e.createLayer("Floor",t,0,0),this.objects=e.createFromObjects("Objects"),this.enemies=this.populateEnemyEntities(e),this.physics.world.enable(this.enemies),this.floor.setCollisionByExclusion([-999,39,40,58,59,60,61,62,63,64,65,66,67,666],!0),this.player=new h({scene:this,x:160,y:e.heightInPixels-48}),this.physics.add.collider(this.player,this.floor),this.physics.add.collider(this.player,this.enemies),this.physics.add.collider(this.floor,this.enemies),this.physics.add.collider(this.enemies,this.enemies),this.physics.add.collider(this.player.magic_missiles,this.enemies,this.handleMissileHitMonster,null,this),this.physics.add.collider(this.player.magic_missiles,this.floor,this.handleMissileHitWall,null,this),this.cursors=this.input.keyboard.createCursorKeys(),this.scene.launch("hud"),this.cameras.main.fadeIn(1e3,0,0,0),this.cameras.main.startFollow(this.player,!0,0,.9,0,200)}update(){this.player.handle_movement(),this.player.handle_floor()}clickedStartBtn(){this.cameras.main.fadeOut(1e3,0,0,0)}handleMissileHitWall(e,t){e.recycleMissile()}handleMissileHitMonster(e,t){e.handleHitMonster(t)}handleSteppedOnFloorTile(e,t){}populateEnemyEntities(e=null){return this.populateEnemyEntitiesComplex(e)}populateEnemyEntitiesSimple(e=null){e=e||this.tilemap;var t=this.physics.add.group();console.log("Summoning monsters ...");var s=e.createFromObjects("Entities",[{scene:this,classType:o}]);return Phaser.Utils.Array.Each(s,(e=>e.monster_initialize())),t.addMultiple(s),t}populateEnemyEntitiesComplex(e=null){e=e||this.tilemap;var t=this.physics.add.group();let s={meanie:{gid:40,klass:d},slimer:{gid:41,klass:o},devil:{gid:42,klass:o},vore:{gid:43,klass:o},demon:{gid:44,klass:o},spider:{gid:45,klass:o},grinder:{gid:46,klass:o},snotty:{gid:47,klass:o},deadhead:{gid:48,klass:o},cultist:{gid:49,klass:o},snake:{gid:50,klass:o},octopus:{gid:51,klass:o},ogre:{gid:52,klass:o},orc:{gid:53,klass:o},wraith:{gid:54,klass:o},skull:{gid:55,klass:o},knight:{gid:56,klass:o},mage:{gid:57,klass:o}};for(let[a,n]of Object.entries(s)){let s="Entities",l=this;var i=e.createFromObjects(s,[{gid:n.gid+1,scene:l,classType:n.klass}]);Phaser.Utils.Array.Each(i,(e=>e.monster_initialize(a,n))),t.addMultiple(i)}return t}handlePlayerTunnelExit(){this.cameras.main.fadeOut(1e3,0,0,0),this.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE,((e,t)=>{this.callbackPlayerTunnelExitDone()}))}callbackPlayerTunnelExitDone(){var e=this.getTunnelSceneNameForLevel(this.currentLevel+1);console.log(e),this.player.player_uninitialize(),this.isLastLevel()?(this.scene.sleep(),this.scene.start("lobby")):this.scene.restart({level:this.currentLevel+1})}isLastLevel(){return 3==this.currentLevel}getTunnelSceneNameForLevel(e=1){return"tunnel"+e.toString().padStart(2,"0")}getTunnelFilenameForLevel(e=1){let t=this.getTunnelSceneNameForLevel(e);return this.getDataBaseDir()+"/data/tunnels/"+t+".json"}getDataBaseDir(){return"."}}class y extends Phaser.Scene{constructor(){super("hud")}create(){this.add.text(64,8,"Tunnel Dash",{font:"32px Arial",fill:"#ff00ff"}).setAlpha(0);var e=.01,t=this.add.rectangle(0,400,120,80).setOrigin(0);t.setStrokeStyle(2,1729964),t.setAlpha(e),t.setInteractive().on("pointerdown",(()=>this.handleLeftButton())),this.leftBtn=t;var i=this.add.rectangle(200,400,120,80).setOrigin(0);i.setStrokeStyle(2,1729964),i.setAlpha(e),i.setInteractive().on("pointerdown",(()=>this.handleRightButton())),this.rightBtn=i;var a=this.add.rectangle(100,360,120,80).setOrigin(0);a.setStrokeStyle(2,1729964),a.setAlpha(e),a.setInteractive().on("pointerdown",(()=>this.handleUpButton())),this.upBtn=a;var n=this.add.rectangle(120,440,80,64).setOrigin(0);n.setStrokeStyle(2,1729964),n.setAlpha(e),n.setInteractive().on("pointerdown",(()=>this.handleDownButton())),this.downBtn=n;var l=this.add.rectangle(40,48,240,320).setOrigin(0);l.setStrokeStyle(2,1729964),l.setAlpha(e),l.setInteractive().on("pointerdown",(()=>this.handleMainTapButton())),this.mainAreaBtn=l,this.add.rectangle(8,16,12,200,0).setOrigin(0).setAlpha(.2).setStrokeStyle(3,255);var r=this.add.rectangle(8,16,12,200,4465407).setOrigin(0).setAlpha(.8);this.manaBar=r,this.add.rectangle(300,16,12,200,0).setOrigin(0).setAlpha(.2).setStrokeStyle(3,16711680);var h=this.add.rectangle(300,16,12,200,16720452).setOrigin(0).setAlpha(.8);this.healthBar=h;var o=this.add.rectangle(8,8,32,32).setOrigin(0).setAlpha(.8).setStrokeStyle(5,16401598);o.setInteractive().on("pointerdown",(()=>this.handleTopLeftEscButton())),this.topLeftEscBtn=o,this.eventually=s.getCurrent(),this.eventually.on("TUN_PLAYER_STATUS_UPDATE",(e=>this.eventHandlePlayerStatUpdate(e)))}handleLeftButton(){this.eventually.emit("TUN_HUD_LEFT"),this.leftBtn.setStrokeStyle(5,1140394),this.rightBtn.setStrokeStyle(1,11167249)}handleRightButton(){this.eventually.emit("TUN_HUD_RIGHT"),this.rightBtn.setStrokeStyle(5,1140394),this.leftBtn.setStrokeStyle(1,11167249)}handleUpButton(){this.eventually.emit("TUN_HUD_FORWARD")}handleDownButton(){this.eventually.emit("TUN_HUD_BACKWARD")}handleMainTapButton(){this.eventually.emit("TUN_HUD_MAIN_TAP")}handleTopLeftEscButton(){this.scale.toggleFullscreen()}eventHandlePlayerStatUpdate(e){let t=e.mana_pool.getRatio();this.manaBar.height=200*t;let s=e.health_pool.getRatio();this.healthBar.height=200*s}}class u extends Phaser.Game{constructor(t=null,s={}){var i=null;i=t?[new c(t),new y]:[new e,new c,new y],super({type:Phaser.AUTO,width:320,height:480,scene:i,physics:{default:"arcade",arcade:{debug:!1,gravity:{y:0}}}})}}var p=document.querySelector("#tun-dash-game");p&&new class{constructor(e,t={}){this.tunDashElem=e,this.level=e.dataset.level}startGame(){this.tunDashGame=new u(this.level)}}(p).startGame()})();